webpackJsonp([0x7f6b50f8b8c6],{943:function(n,t){n.exports={data:{uiComponentsYaml:{title:"Toggle switch",category:"UI components",examples:[{title:"Usage",introduction:null,subTitle:"Example",react:"import React from 'react';\nimport { ToggleSwitch } from 'bhp-ui-react';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      on: [false, true]\n    };\n  }\n\n  toggle(index) {\n    this.setState(prevState => {\n      prevState.on[index] = !prevState.on[index];\n      return prevState;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ToggleSwitch on={this.state.on[0]} onClick={() => this.toggle(0)} />\n        <ToggleSwitch on={this.state.on[1]} onClick={() => this.toggle(1)} />\n      </div>\n    );\n  }\n}\n\nexport default Example;\n",angular:'<BHPSwitch [isOn]="false" switchClass="">\n  <div left>YES</div>\n  <div right>NO</div>\n</BHPSwitch>\n<BHPSwitch [isOn]="true" switchClass="">\n  <div left>YES</div>\n  <div right>NO</div>\n</BHPSwitch>\n',component:null,css:null,html:'<div onclick="toggle(this)" class="toggle-switch">\n  <div class="toggle-switch-message-on">\n    YES\n  </div>\n  <div class="toggle-switch-toggler">\n  </div>\n  <div class="toggle-switch-message-off">\n    NO\n  </div>\n</div>\n\n<div onclick="toggle(this)" class="toggle-switch toggle-switch-on">\n  <div class="toggle-switch-message-on">\n    YES\n  </div>\n  <div class="toggle-switch-toggler">\n  </div>\n  <div class="toggle-switch-message-off">\n    NO\n  </div>\n</div>\n<script>\n  function toggle(element){\n      if($(element).length > 0){\n          $(element).hasClass("toggle-switch-on")\n          ? $(element).removeClass("toggle-switch-on")\n          : $(element).addClass("toggle-switch-on")\n      }\n  }\n</script>\n',actualHtml:null},{title:"Variations",introduction:null,subTitle:"Example",react:"import React from 'react';\nimport { ToggleSwitch } from 'bhp-ui-react';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      on: [false, true, true, true, true, true]\n    };\n  }\n\n  toggle(index) {\n    this.setState(prevState => {\n      prevState.on[index] = !prevState.on[index];\n      return prevState;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ToggleSwitch\n          color='primary'\n          onMessage='SÍ'\n          offMessage='NO'\n          on={this.state.on[0]}\n          onClick={() => this.toggle(0)}\n        />\n        <ToggleSwitch\n          color='primary'\n          onMessage='SÍ'\n          offMessage='NO'\n          on={this.state.on[1]}\n          onClick={() => this.toggle(1)}\n        />\n        <ToggleSwitch\n          color='info'\n          on={this.state.on[2]}\n          onClick={() => this.toggle(2)}\n        />\n        <ToggleSwitch\n          color='success'\n          on={this.state.on[3]}\n          onClick={() => this.toggle(3)}\n        />\n        <ToggleSwitch\n          color='danger'\n          on={this.state.on[4]}\n          onClick={() => this.toggle(4)}\n        />\n        <ToggleSwitch\n          color='warning'\n          on={this.state.on[5]}\n          onClick={() => this.toggle(5)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Example;\n",angular:'<BHPSwitch [isOn]="false" switchClass="toggle-switch-primary">\n  <div left>SÍ</div>\n  <div right>NO</div>\n</BHPSwitch>\n\n<BHPSwitch [isOn]="true" switchClass="toggle-switch-primary">\n  <div left>SÍ</div>\n  <div right>NO</div>\n</BHPSwitch>\n\n<BHPSwitch [isOn]="true" switchClass="toggle-switch-info">\n  <div left>YES</div>\n  <div right>NO</div>\n</BHPSwitch>\n\n<BHPSwitch [isOn]="true" switchClass="toggle-switch-success">\n  <div left>YES</div>\n  <div right>NO</div>\n</BHPSwitch>\n\n<BHPSwitch [isOn]="true" switchClass="toggle-switch-danger">\n  <div left>YES</div>\n  <div right>NO</div>\n</BHPSwitch>\n\n<BHPSwitch [isOn]="true" switchClass="toggle-switch-warning">\n  <div left>YES</div>\n  <div right>NO</div>\n</BHPSwitch>\n',component:null,css:null,html:'<div onclick="toggle(this)" class="toggle-switch toggle-switch-primary">\n  <div class="toggle-switch-message-on">\n    SÍ\n  </div>\n  <div class="toggle-switch-toggler">\n  </div>\n  <div class="toggle-switch-message-off">\n    NO\n  </div>\n</div>\n\n<div onclick="toggle(this)" class="toggle-switch toggle-switch-primary toggle-switch-on">\n  <div class="toggle-switch-message-on">\n    SÍ\n  </div>\n  <div class="toggle-switch-toggler">\n  </div>\n  <div class="toggle-switch-message-off">\n    NO\n  </div>\n</div>\n\n<div onclick="toggle(this)" class="toggle-switch toggle-switch-info toggle-switch-on">\n  <div class="toggle-switch-message-on">\n    YES\n  </div>\n  <div class="toggle-switch-toggler">\n  </div>\n  <div class="toggle-switch-message-off">\n    NO\n  </div>\n</div>\n\n<div onclick="toggle(this)" class="toggle-switch toggle-switch-success toggle-switch-on">\n  <div class="toggle-switch-message-on">\n    YES\n  </div>\n  <div class="toggle-switch-toggler">\n  </div>\n  <div class="toggle-switch-message-off">\n    NO\n  </div>\n</div>\n\n<div onclick="toggle(this)" class="toggle-switch toggle-switch-danger toggle-switch-on">\n  <div class="toggle-switch-message-on">\n    YES\n  </div>\n  <div class="toggle-switch-toggler">\n  </div>\n  <div class="toggle-switch-message-off">\n    NO\n  </div>\n</div>\n\n<div onclick="toggle(this)" class="toggle-switch toggle-switch-warning toggle-switch-on">\n  <div class="toggle-switch-message-on">\n    YES\n  </div>\n  <div class="toggle-switch-toggler">\n  </div>\n  <div class="toggle-switch-message-off">\n    NO\n  </div>\n</div>\n<script>\n  function toggle(element){\n      if($(element).length > 0){\n          $(element).hasClass("toggle-switch-on")\n          ? $(element).removeClass("toggle-switch-on")\n          : $(element).addClass("toggle-switch-on")\n      }\n  }\n </script>\n',actualHtml:null}],fields:{slug:"/ui-components/toggle-switch/",preHtml:"<p>The toggle switch represents a physical switch that allows users to turn things on or off. The use of primary colour (or alerts colours) in the ON state provides a clear visual feedback for user interaction with control.</p>\n",postHtml:"\n"}}},pathContext:{slug:"/ui-components/toggle-switch/"}}}});
//# sourceMappingURL=path---ui-components-toggle-switch-d96b87882ad8675d7358.js.map