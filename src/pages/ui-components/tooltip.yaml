title: Tooltip
category: UI components
preText: |
  Tooltips can be attached to any element. When you hover the element with your
  mouse, the title attribute is displayed in a little box next to the element
  that can be styled. Tooltips are also useful for form elements, to show some
  additional information in the context of each field and can be style with a
  heading.
examples:
  - title: Usage
    introduction: |
      The state of the tooltip can be controlled using `isOpen`.
    subTitle: Example
    react: |
      import React from 'react';
      import { Tooltip } from 'reactstrap';

      export default class Example extends React.Component {
        constructor(props) {
          super(props);

          this.toggle = this.toggle.bind(this);
          this.state = {
            tooltipOpen: false
          };
        }

        toggle() {
          this.setState({
            tooltipOpen: !this.state.tooltipOpen
          });
        }

        render() {
          return (
            <div>
              <p>This is an example <a href="#" id="TooltipExample">tooltip</a>.</p>
              <Tooltip
                placement="bottom"
                isOpen={this.state.tooltipOpen}
                target="TooltipExample"
                toggle={this.toggle}
              >
                Tooltip text bottom
              </Tooltip>
            </div>
          );
        }
      }
    angular: |
      <div style="padding: 50px">
        <a type="button"
                tooltip="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
                placement="bottom">
          tooltip.
        </a>
      </div>

  - title: Uncontrolled variant
    introduction: |
      For simple cases, an uncontrolled tooltip which manages its own state can
      be used.
    subTitle: Example
    react: |
      import React from 'react';
      import { UncontrolledTooltip } from 'reactstrap';

      export default function Example() {
        return (
          <div>
            <p>This is an example <a href="#" id="UncontrolledTooltipExample">tooltip</a>.</p>
            <UncontrolledTooltip placement="bottom" target="UncontrolledTooltipExample">
              Uncontrolled tooltip text
            </UncontrolledTooltip>
          </div>
        );
      }

    html: |
      <div style="padding: 50px">
        <a href="#"
          data-toggle="tooltip"
          data-placement="bottom"
          title="Tooltip on bottom"
        >
          Tooltip
        </a>
        <script>$(function () {$('[data-toggle="tooltip"]').tooltip()})</script>
      </div>

  - title: Positioning
    introduction: |
      The position of the tooltip can be controlled.
    subTitle: Example
    react: |
      import React from 'react';
      import { UncontrolledTooltip } from 'reactstrap';

      export default function Example() {
        return (
          <div>
            <p>
              <span id="UncontrolledTooltipExampleTop">top</span>{' '}
              <UncontrolledTooltip placement="top" target="UncontrolledTooltipExampleTop">
                Top
              </UncontrolledTooltip>
              <span id="UncontrolledTooltipExampleRight">right</span>{' '}
              <UncontrolledTooltip placement="right" target="UncontrolledTooltipExampleRight">
                Right
              </UncontrolledTooltip>
              <span id="UncontrolledTooltipExampleBottom">bottom</span>{' '}
              <UncontrolledTooltip placement="bottom" target="UncontrolledTooltipExampleBottom">
                Bottom
              </UncontrolledTooltip>
              <span id="UncontrolledTooltipExampleLeft">left</span>
              <UncontrolledTooltip placement="left" target="UncontrolledTooltipExampleLeft">
                Left
              </UncontrolledTooltip>
            </p>
          </div>
        );
      }
    html: |
      <div style="padding: 50px">
        <a href="#"
          data-toggle="tooltip"
          data-placement="top"
          title="Tooltip on top"
        >
          &nbsp;&nbsp;&nbsp; Tooltip on top  &nbsp;&nbsp;&nbsp;
        </a>
        <a href="#"
          data-toggle="tooltip"
          data-placement="right"
          title="Tooltip on right"
        >
          &nbsp;&nbsp;&nbsp; Tooltip on right &nbsp;&nbsp;&nbsp;
        </a>
        <a href="#"
          data-toggle="tooltip"
          data-placement="bottom"
          title="Tooltip on bottom"
        >
          &nbsp;&nbsp;&nbsp; Tooltip on bottom &nbsp;&nbsp;&nbsp;
        </a>
        <a href="#"
          data-toggle="tooltip"
          data-placement="left"
          title="Tooltip on left"
        >
          &nbsp;&nbsp;&nbsp; Tooltip on left &nbsp;&nbsp;&nbsp;
        </a>
      </div>
      <script>$(function () {$('[data-toggle="tooltip"]').tooltip()})</script>
    css: |
      .container-size{
        height: 80px;
      }
    angular: |
      <div style="padding: 50px">
        <Button type="button" class="btn btn-default btn-secondary mb-2"
                tooltip="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
                placement="top">
          Tooltip on top
        </Button>

        <Button type="button" class="btn btn-default btn-secondary mb-2"
                tooltip="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
                placement="right">
          Tooltip on right
        </Button>

        <Button type="button" class="btn btn-default btn-secondary mb-2"
                tooltip="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
                placement="auto">
          Tooltip auto
        </Button>

        <Button type="button" class="btn btn-default btn-secondary mb-2"
                tooltip="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
                placement="left">
          Tooltip on left
        </Button>

        <Button type="button" class="btn btn-default btn-secondary mb-2"
                tooltip="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
                placement="bottom">
          Tooltip on bottom
        </Button>
      </div>
