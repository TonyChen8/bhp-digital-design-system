{"version":3,"sources":["webpack:///path---ui-components-modal-421cd04efd6e3142ab33.js","webpack:///./.cache/json/ui-components-modal.json"],"names":["webpackJsonp","932","module","exports","data","uiComponentsYaml","title","category","examples","introduction","subTitle","react","angular","component","css","html","actualHtml","fields","slug","preHtml","postHtml","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,kBAAoBC,MAAA,QAAAC,SAAA,gBAAAC,WAAwDF,MAAA,sBAAAG,aAAA,kEAAAC,SAAA,UAAAC,MAAA,o9BAA4lCC,QAAA,6uBAAimBC,UAAA,KAAAC,IAAA,0CAAuPC,KAAA,+iCAAqqBC,WAAA,OAAydV,MAAA,wBAAAG,aAAA,iJAAAC,SAAA,UAAAC,MAAA,ohCAA+uCC,QAAA,KAAAC,UAAA,KAAAC,IAAA,0CAAgFC,KAAA,o8BAAAC,WAAA,OAA2gCC,QAAYC,KAAA,wBAAAC,QAAA,saAAAC,SAAA,QAAieC,aAAgBH,KAAA","file":"path---ui-components-modal-421cd04efd6e3142ab33.js","sourcesContent":["webpackJsonp([217970213800576],{\n\n/***/ 932:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"uiComponentsYaml\":{\"title\":\"Modal\",\"category\":\"UI components\",\"examples\":[{\"title\":\"Modal - information\",\"introduction\":\"The following example shows how to create an information modal.\",\"subTitle\":\"Example\",\"react\":\"import React from 'react';\\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\\n\\nclass ModalExample extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      modal: false\\n    };\\n\\n    this.toggle = this.toggle.bind(this);\\n  }\\n\\n  toggle() {\\n    this.setState({\\n      modal: !this.state.modal\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button color=\\\"primary\\\" outline onClick={this.toggle}>Launch Modal</Button>\\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\\n          <ModalHeader toggle={this.toggle}>Changes saved</ModalHeader>\\n          <ModalBody>\\n            All changes you just made have been saved to the database.\\n          </ModalBody>\\n          <ModalFooter>\\n            <Button color=\\\"secondary\\\" onClick={this.toggle}>Close</Button>\\n          </ModalFooter>\\n        </Modal>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ModalExample;\\n\",\"angular\":\"<div style=\\\"height: 250px\\\">\\n  <Button class=\\\"btn\\\" btnColor=\\\"primary outline\\\" (click)=\\\"modal.openBHPModal()\\\">Launch Modal</Button>\\n  <BHPModal #modal [context]=\\\"{name: 'All changes you just made have been saved to the database.'}\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Changes saved</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.closeBHPModal()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      {{modal.context.name}}\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <Button class=\\\"btn\\\" btnColor=\\\"secondary\\\" (click)=\\\"modal.closeBHPModal()\\\">Close</Button>\\n    </div>\\n  </BHPModal>\\n</div>\\n\",\"component\":null,\"css\":\".container-size{\\n  height: 250px;\\n}\\n\",\"html\":\"<div class=\\\"container-size\\\">\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-primary\\\"\\n    data-toggle=\\\"modal\\\"\\n    data-target=\\\"#exampleModal\\\"\\n  >\\n  Launch Modal\\n  </button>\\n  <div id=\\\"exampleModal\\\" class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\">Changes saved</h5>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"close\\\"\\n            data-dismiss=\\\"modal\\\"\\n            aria-label=\\\"Close\\\"\\n          >\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>All changes you just made have been saved to the database.</p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            data-dismiss=\\\"modal\\\"\\n          >\\n            Close\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\"actualHtml\":null},{\"title\":\"Modal - user response\",\"introduction\":\"The following example shows how to create a modal that needs the user's\\nresponse, and cannot be closed by clicking elsewhere on the screen.\\n\",\"subTitle\":\"Example\",\"react\":\"import React from 'react';\\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\\n\\nclass ModalExample extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      modal: false\\n    };\\n\\n    this.toggle = this.toggle.bind(this);\\n  }\\n\\n  toggle() {\\n    this.setState({\\n      modal: !this.state.modal\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button color=\\\"primary\\\" outline onClick={this.toggle}>Launch Modal</Button>\\n        <Modal isOpen={this.state.modal}>\\n          <ModalHeader>Warning</ModalHeader>\\n          <ModalBody>\\n            This Crew Member does not have the required Competencies to be\\n            assigned to this Task.\\n          </ModalBody>\\n          <ModalFooter>\\n            <Button color=\\\"secondary\\\" onClick={this.toggle}>Cancel</Button>\\n            <Button color=\\\"primary\\\" onClick={this.toggle}>OK</Button>\\n          </ModalFooter>\\n        </Modal>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ModalExample;\\n\",\"angular\":null,\"component\":null,\"css\":\".container-size{\\n  height: 250px;\\n}\\n\",\"html\":\"<div class=\\\"container-size\\\">\\n  <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-outline-primary\\\"\\n      data-toggle=\\\"modal\\\"\\n      data-target=\\\"#exampleModal2\\\"\\n    >\\n    Launch Modal\\n  </button>\\n  <div id=\\\"exampleModal2\\\" class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\">Warning</h5>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>\\n            This Crew Member does not have the required Competencies to be\\n            assigned to this Task.\\n          </p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n            Cancel\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n            OK\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\"actualHtml\":null}],\"fields\":{\"slug\":\"/ui-components/modal/\",\"preHtml\":\"<p>Modal dialogues are used when you need a response from a user or to show information without losing the context of the page. No other interactions within the application can be accessed whilst a modal dialog is active. It should be used with consideration and sparingly.</p>\\n<p><strong>Tip</strong>: blank out the background with an opacity overlay of 75% to make modal the most prominent element on the page.</p>\\n\",\"postHtml\":\"\\n\"}}},\"pathContext\":{\"slug\":\"/ui-components/modal/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---ui-components-modal-421cd04efd6e3142ab33.js","module.exports = {\"data\":{\"uiComponentsYaml\":{\"title\":\"Modal\",\"category\":\"UI components\",\"examples\":[{\"title\":\"Modal - information\",\"introduction\":\"The following example shows how to create an information modal.\",\"subTitle\":\"Example\",\"react\":\"import React from 'react';\\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\\n\\nclass ModalExample extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      modal: false\\n    };\\n\\n    this.toggle = this.toggle.bind(this);\\n  }\\n\\n  toggle() {\\n    this.setState({\\n      modal: !this.state.modal\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button color=\\\"primary\\\" outline onClick={this.toggle}>Launch Modal</Button>\\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\\n          <ModalHeader toggle={this.toggle}>Changes saved</ModalHeader>\\n          <ModalBody>\\n            All changes you just made have been saved to the database.\\n          </ModalBody>\\n          <ModalFooter>\\n            <Button color=\\\"secondary\\\" onClick={this.toggle}>Close</Button>\\n          </ModalFooter>\\n        </Modal>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ModalExample;\\n\",\"angular\":\"<div style=\\\"height: 250px\\\">\\n  <Button class=\\\"btn\\\" btnColor=\\\"primary outline\\\" (click)=\\\"modal.openBHPModal()\\\">Launch Modal</Button>\\n  <BHPModal #modal [context]=\\\"{name: 'All changes you just made have been saved to the database.'}\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Changes saved</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.closeBHPModal()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      {{modal.context.name}}\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <Button class=\\\"btn\\\" btnColor=\\\"secondary\\\" (click)=\\\"modal.closeBHPModal()\\\">Close</Button>\\n    </div>\\n  </BHPModal>\\n</div>\\n\",\"component\":null,\"css\":\".container-size{\\n  height: 250px;\\n}\\n\",\"html\":\"<div class=\\\"container-size\\\">\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-primary\\\"\\n    data-toggle=\\\"modal\\\"\\n    data-target=\\\"#exampleModal\\\"\\n  >\\n  Launch Modal\\n  </button>\\n  <div id=\\\"exampleModal\\\" class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\">Changes saved</h5>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"close\\\"\\n            data-dismiss=\\\"modal\\\"\\n            aria-label=\\\"Close\\\"\\n          >\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>All changes you just made have been saved to the database.</p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            data-dismiss=\\\"modal\\\"\\n          >\\n            Close\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\"actualHtml\":null},{\"title\":\"Modal - user response\",\"introduction\":\"The following example shows how to create a modal that needs the user's\\nresponse, and cannot be closed by clicking elsewhere on the screen.\\n\",\"subTitle\":\"Example\",\"react\":\"import React from 'react';\\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\\n\\nclass ModalExample extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      modal: false\\n    };\\n\\n    this.toggle = this.toggle.bind(this);\\n  }\\n\\n  toggle() {\\n    this.setState({\\n      modal: !this.state.modal\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button color=\\\"primary\\\" outline onClick={this.toggle}>Launch Modal</Button>\\n        <Modal isOpen={this.state.modal}>\\n          <ModalHeader>Warning</ModalHeader>\\n          <ModalBody>\\n            This Crew Member does not have the required Competencies to be\\n            assigned to this Task.\\n          </ModalBody>\\n          <ModalFooter>\\n            <Button color=\\\"secondary\\\" onClick={this.toggle}>Cancel</Button>\\n            <Button color=\\\"primary\\\" onClick={this.toggle}>OK</Button>\\n          </ModalFooter>\\n        </Modal>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ModalExample;\\n\",\"angular\":null,\"component\":null,\"css\":\".container-size{\\n  height: 250px;\\n}\\n\",\"html\":\"<div class=\\\"container-size\\\">\\n  <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-outline-primary\\\"\\n      data-toggle=\\\"modal\\\"\\n      data-target=\\\"#exampleModal2\\\"\\n    >\\n    Launch Modal\\n  </button>\\n  <div id=\\\"exampleModal2\\\" class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\">Warning</h5>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>\\n            This Crew Member does not have the required Competencies to be\\n            assigned to this Task.\\n          </p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n            Cancel\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n            OK\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\"actualHtml\":null}],\"fields\":{\"slug\":\"/ui-components/modal/\",\"preHtml\":\"<p>Modal dialogues are used when you need a response from a user or to show information without losing the context of the page. No other interactions within the application can be accessed whilst a modal dialog is active. It should be used with consideration and sparingly.</p>\\n<p><strong>Tip</strong>: blank out the background with an opacity overlay of 75% to make modal the most prominent element on the page.</p>\\n\",\"postHtml\":\"\\n\"}}},\"pathContext\":{\"slug\":\"/ui-components/modal/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/ui-components-modal.json\n// module id = 932\n// module chunks = 217970213800576"],"sourceRoot":""}